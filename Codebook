
Codebook Assignment Getting and cleaning Data

This code book summarizes the data and variables in tidyData.txt 

Data Set

Information on Data Set The experiments have been carried out with a group of 30 volunteers 
within an age bracket of 19-48 years. Each person performed six activities 
(WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING) 
wearing a smartphone (Samsung Galaxy S II) on the waist. Using its embedded accelerometer and gyroscope,
 we captured 3-axial linear acceleration and 3-axial angular velocity at a constant rate of 50Hz. 
The experiments have been video-recorded to label the data manually. The obtained dataset has been 
randomly partitioned into two sets, where 70% of the volunteers was selected for generating the 
training data and 30% the test data.

The sensor signals (accelerometer and gyroscope) were pre-processed by applying noise filters 
and then sampled in fixed-width sliding windows of 2.56 sec and 50% overlap (128 readings/window). 
The sensor acceleration signal, which has gravitational and body motion components, was separated 
using a Butterworth low-pass filter into body acceleration and gravity. The gravitational force is 
assumed to have only low frequency components, therefore a filter with 0.3 Hz cutoff frequency was used. 
From each window, a vector of features was obtained by calculating variables from the time and 
frequency domain.

Attributes For each record in the dataset provided:

Triaxial acceleration from the accelerometer (total acceleration) and the estimated body acceleration.
Triaxial Angular velocity from the gyroscope.
A 561-feature vector with time and frequency domain variables.
Its activity label.
An identifier of the subject who carried out the experiment.

RUN ANALYSIS SCRIPT

R code script was designed to: Input UCI HAR Dataset downloaded from 
https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip 

1. Merge the training and the test sets to create one data set. 
2. Extract only the measurements on the mean and standard deviation for each measurement. 
3. Use descriptive activity names to name the activities in the data set 
4. Appropriately label the data set with descriptive activity names. 
5. Creates a second, independent tidy data set with the average of each variable for each activity and 
   each subject.

1. MERGING TRAINING & TEST SETS

The following text files were imported and merged. Column names were assigned after files 
was merged. 

Text Files Imported:

'features.txt'
'activityLabels.txt'
'subjecttrain.txt'
'xtrain.txt'
'ytrain.txt'
'subjecttest.txt'
'xtest.txt'
'ytest.txt'

2. A logical vector was created identifying TRUE for the ID, mean & stdev columns and 
   FALSE for other values. Merged data was then subsetted to keep relevant columns

3. Rename activities in data set with descriptive activity names 'datactivityNames.txt' 
   was done.
   
4. Data set was appropriately label with descriptive names using the 'gsub' function 
   to clean up the column names in merged & subsetted data set.

5. New table (independent tidy dataset) was created which contains average for each variable for each activity and subject.

"subjectId" 
"activityId" 
"TimeBodyAccelerometerMean()-X" 
"TimeBodyAccelerometerMean()-Y" 
"TimeBodyAccelerometerMean()-Z" 
"TimeBodyAccelerometerSTD()-X" 
"TimeBodyAccelerometerSTD()-Y" 
"TimeBodyAccelerometerSTD()-Z" 
"TimeGravityAccelerometerMean()-X" 
"TimeGravityAccelerometerMean()-Y" 
"TimeGravityAccelerometerMean()-Z" 
"TimeGravityAccelerometerSTD()-X" 
"TimeGravityAccelerometerSTD()-Y"
 "TimeGravityAccelerometerSTD()-Z" 
"TimeBodyAccelerometerJerkMean()-X" 
"TimeBodyAccelerometerJerkMean()-Y" 
"TimeBodyAccelerometerJerkMean()-Z" 
"TimeBodyAccelerometerJerkSTD()-X" 
"TimeBodyAccelerometerJerkSTD()-Y" 
"TimeBodyAccelerometerJerkSTD()-Z" 
"TimeBodyGyroscopeMean()-X" 
"TimeBodyGyroscopeMean()-Y" 
"TimeBodyGyroscopeMean()-Z" 
"TimeBodyGyroscopeSTD()-X" 
"TimeBodyGyroscopeSTD()-Y" 
"TimeBodyGyroscopeSTD()-Z" 
"TimeBodyGyroscopeJerkMean()-X" 
"TimeBodyGyroscopeJerkMean()-Y" 
"TimeBodyGyroscopeJerkMean()-Z"
 "TimeBodyGyroscopeJerkSTD()-X" 
"TimeBodyGyroscopeJerkSTD()-Y" 
"TimeBodyGyroscopeJerkSTD()-Z" 
"TimeBodyAccelerometerMagnitudeMean()" 
"TimeBodyAccelerometerMagnitudeSTD()" 
"TimeGravityAccelerometerMagnitudeMean()" 
"TimeGravityAccelerometerMagnitudeSTD()" 
"TimeBodyAccelerometerJerkMagnitudeMean()" 
"TimeBodyAccelerometerJerkMagnitudeSTD()" 
"TimeBodyGyroscopeMagnitudeMean()"
 "TimeBodyGyroscopeMagnitudeSTD()" 
"TimeBodyGyroscopeJerkMagnitudeMean()" 
"TimeBodyGyroscopeJerkMagnitudeSTD()" 
"FrequencyBodyAccelerometerMean()-X"
 "FrequencyBodyAccelerometerMean()-Y" 
"FrequencyBodyAccelerometerMean()-Z" 
"FrequencyBodyAccelerometerSTD()-X" 
"FrequencyBodyAccelerometerSTD()-Y" 
"FrequencyBodyAccelerometerSTD()-Z" 
"FrequencyBodyAccelerometerMeanFreq()-X" 
"FrequencyBodyAccelerometerMeanFreq()-Y" 
"FrequencyBodyAccelerometerMeanFreq()-Z" 
"FrequencyBodyAccelerometerJerkMean()-X" 
"FrequencyBodyAccelerometerJerkMean()-Y" 
"FrequencyBodyAccelerometerJerkMean()-Z" 
"FrequencyBodyAccelerometerJerkSTD()-X" 
"FrequencyBodyAccelerometerJerkSTD()-Y" 
"FrequencyBodyAccelerometerJerkSTD()-Z" 
"FrequencyBodyAccelerometerJerkMeanFreq()-X" 
"FrequencyBodyAccelerometerJerkMeanFreq()-Y" 
"FrequencyBodyAccelerometerJerkMeanFreq()-Z" 
"FrequencyBodyGyroscopeMean()-X"
 "FrequencyBodyGyroscopeMean()-Y" 
"FrequencyBodyGyroscopeMean()-Z" 
"FrequencyBodyGyroscopeSTD()-X" 
"FrequencyBodyGyroscopeSTD()-Y" 
"FrequencyBodyGyroscopeSTD()-Z" 
"FrequencyBodyGyroscopeMeanFreq()-X" 
"FrequencyBodyGyroscopeMeanFreq()-Y" 
"FrequencyBodyGyroscopeMeanFreq()-Z" 
"FrequencyBodyAccelerometerMagnitudeMean()" 
"FrequencyBodyAccelerometerMagnitudeSTD()" 
"FrequencyBodyAccelerometerMagnitudeMeanFreq()" 
"FrequencyBodyAccelerometerJerkMagnitudeMean()" 
"FrequencyBodyAccelerometerJerkMagnitudeSTD()" 
"FrequencyBodyAccelerometerJerkMagnitudeMeanFreq()"
 "FrequencyBodyGyroscopeMagnitudeMean()" 
"FrequencyBodyGyroscopeMagnitudeSTD()"
 "FrequencyBodyGyroscopeMagnitudeMeanFreq()" 
"FrequencyBodyGyroscopeJerkMagnitudeMean()" 
"FrequencyBodyGyroscopeJerkMagnitudeSTD()" 
"FrequencyBodyGyroscopeJerkMagnitudeMeanFreq()" 
"activityType"













